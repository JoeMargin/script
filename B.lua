--// CRYPTED

return(function()local CRYPTEDlIIIIlIl = "lol you have to stop trying to deobfuscate";local CRYPTEDlIIIIlIl = "lol you have to stop trying to deobfuscate";local CRYPTEDlIIIIlIl = "lol you have to stop trying to deobfuscate";local CRYPTEDlIIllllI=47;local CRYPTEDlIIlllIl=298;local CRYPTEDlIIlllII=3;local CRYPTEDlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local CRYPTEDlIIlllIl=45;local CRYPTEDlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local CRYPTEDlIIlIlII=(function()local a=false;local b=string.unpack;local c=table.pack;local d=table.create;local e=table.move;local f=coroutine.create;local g=coroutine.yield;local h=coroutine.resume;local i=tonumber;local j=pcall;local function k()return{slist={},plist={}}end;local function l()return{code={},k={},protos={}}end;local m={{"NOP",0},{"BREAK",0},{"LOADNIL",1},{"LOADB",3},{"LOADN",4},{"LOADK",4},{"MOVE",2},{"GETGLOBAL",1,true},{"SETGLOBAL",1,true},{"GETUPVAL",2},{"SETUPVAL",2},{"CLOSEUPVALS",1},{"GETIMPORT",4,true},{"GETTABLE",3},{"SETTABLE",3},{"GETTABLEKS",3,true},{"SETTABLEKS",3,true},{"GETTABLEN",3},{"SETTABLEN",3},{"NEWCLOSURE",4},{"NAMECALL",3,true},{"CALL",3},{"RETURN",2},{"JUMP",4},{"JUMPBACK",4},{"JUMPIF",4},{"JUMPIFNOT",4},{"JUMPIFEQ",4,true},{"JUMPIFLE",4,true},{"JUMPIFLT",4,true},{"JUMPIFNOTEQ",4,true},{"JUMPIFNOTLE",4,true},{"JUMPIFNOTLT",4,true},{"ADD",3},{"SUB",3},{"MUL",3},{"DIV",3},{"MOD",3},{"POW",3},{"ADDK",3},{"SUBK",3},{"MULK",3},{"DIVK",3},{"MODK",3},{"POWK",3},{"AND",3},{"OR",3},{"ANDK",3},{"ORK",3},{"CONCAT",3},{"NOT",2},{"MINUS",2},{"LENGTH",2},{"NEWTABLE",2,true},{"DUPTABLE",4},{"SETLIST",3,true},{"FORNPREP",4},{"FORNLOOP",4},{"FORGLOOP",4,true},{"FORGPREP_INEXT",4},{"LOP_DEP_FORGLOOP_INEXT",0},{"FORGPREP_NEXT",4},{"LOP_DEP_FORGLOOP_NEXT",0},{"GETVARARGS",2},{"DUPCLOSURE",4},{"PREPVARARGS",1},{"LOADKX",1,true},{"JUMPX",5},{"FASTCALL",3},{"COVERAGE",5},{"CAPTURE",2},{"LOP_DEP_JUMPIFEQK",0},{"LOP_DEP_JUMPIFNOTEQK",0},{"FASTCALL1",3},{"FASTCALL2",3,true},{"FASTCALL2K",3,true},{"FORGPREP",4},{"JUMPXEQKNIL",4,true},{"JUMPXEQKB",4,true},{"JUMPXEQKN",4,true},{"JUMPXEQKS",4,true}}local n={}for a,b in next,m do if b[3]then table.insert(n,a)end end;local o=-1;local p=-2;local function q(a)local c=1;local d=k()local e=d.slist;local f=d.plist;local function g()local a=b(">B",a,c)c=c+1;return a end;local function h()local a=b("I4",a,c)c=c+4;return a end;local function i()local a=0;for b=0,7 do local c=g()a=bit32.bor(a,bit32.lshift(bit32.band(c,127),b*7))if bit32.band(c,128)==0 then break end end;return a end;local function j()local d=i()local e;if d==0 then return""else e=b("c"..d,a,c)c=c+d end;return e end;local function k(a)local b={}local c=h()local d=bit32.band(c,255)b.value=c;b.opcode=d;local e=m[d+1]b.opname=e[1]local e=e[2]b.type=e;local e=b.type;if e==3 then b.A=bit32.band(bit32.rshift(c,8),255)b.B=bit32.band(bit32.rshift(c,16),255)b.C=bit32.band(bit32.rshift(c,24),255)elseif e==2 then b.A=bit32.band(bit32.rshift(c,8),255)b.B=bit32.band(bit32.rshift(c,16),255)elseif e==1 then b.A=bit32.band(bit32.rshift(c,8),255)elseif e==4 then b.A=bit32.band(bit32.rshift(c,8),255)local a=bit32.band(bit32.rshift(c,16),65535)b.D=a<32768 and a or a-65536 elseif e==5 then local a=bit32.band(bit32.rshift(c,8),16777215)b.E=a<8388608 and a or a-16777216 end;if table.find(n,d+1)then local c=h()b.aux=c;table.insert(a,b)table.insert(a,{value=c})return true end;table.insert(a,b)return false end;local function m()local e=l()e.maxstacksize=g()e.numparams=g()e.nups=g()e.isvararg=g()~=0;local f=e.code;local j=i()e.sizecode=j;local l=false;for a=1,j do if l then l=false;continue end;l=k(f)end;local f=e.k;local k=i()e.sizek=k;for e=1,k do local e=g()local j;if e==0 then j=nil elseif e==1 then j=g()~=0 elseif e==2 then local a=b("d",a,c)c=c+8;j=a elseif e==3 then j=d.slist[i()]elseif e==4 then j=h()elseif e==5 then local a={}local b=i()for b=1,b do table.insert(a,i())end;j=a elseif e==6 then j=i()end;table.insert(f,j)end;local a=i()local b=e.protos;e.sizep=a;for a=1,a do table.insert(b,i())end;i()i()if g()~=0 then local a=g()for a=1,j do g()end;local a=bit32.rshift(j-1,a)+1;for a=1,a do h()end end;if g()~=0 then local a=i()for a=1,a do i()i()i()g()end end;return e end;local b=g()local b=i()for a=1,b do table.insert(e,j())end;local b=i()for a=1,b do table.insert(f,m())end;d.mainp=i()assert(c==#a+1,"Deserializer position mismatch")return d end;local function b(b,k)if type(b)=="string"then b=q(b)end;local l=b.plist;local m=l[b.mainp+1]local function n(b,m,q)local function r(a,j,r,r,s)local t,u,v,w=-1,1,{},{}local x=m.k;while true do local y=r[u]local z=y.opcode;u+=1;a.pc=u;a.name=y.opname;if z==2 then j[y.A]=nil elseif z==3 then j[y.A]=y.B~=0;u+=y.C elseif z==4 then j[y.A]=y.D elseif z==5 then j[y.A]=x[y.D+1]elseif z==6 then j[y.A]=j[y.B]elseif z==7 then u+=1;local a=x[aux+1]assert(type(a)=="string","GETGLOBAL encountered non-string constant!")j[y.A]=k[a]elseif z==8 then u+=1;local a=x[y.aux+1]assert(type(a)=="string","GETGLOBAL encountered non-string constant!")k[a]=j[y.A]elseif z==9 then local a=q[y.B+1]j[y.A]=a.store[a.index]elseif z==10 then local a=q[y.B+1]a.store[a.index]=j[y.A]elseif z==11 then for a,b in v do if b.index>=y.A then b.value=b.store[b.index]b.store=b;b.index="value"v[a]=nil end end elseif z==12 then u+=1;local a=y.aux;local b=bit32.rshift(a,30)local c=bit32.band(bit32.rshift(a,20),1023)if b==1 then j[y.A]=k[x[c+1]]elseif b==2 then local a=bit32.band(bit32.rshift(a,10),1023)j[y.A]=k[x[c+1]][x[a+1]]elseif b==3 then local b=bit32.band(bit32.rshift(a,10),1023)local a=bit32.band(bit32.rshift(a,0),1023)j[y.A]=k[x[c+1]][x[b+1]][x[a+1]]end elseif z==13 then j[y.A]=j[y.B][j[y.C]]elseif z==14 then j[y.B][j[y.C]]=j[y.A]elseif z==15 then u+=1;local a=x[y.aux+1]j[y.A]=j[y.B][a]elseif z==16 then u+=1;local a=x[y.aux+1]j[y.B][a]=j[y.A]elseif z==17 then j[y.A]=j[y.B][y.C]elseif z==18 then j[y.B][y.C]=j[y.A]elseif z==19 then local a=l[y.D+1]local c={}for a=1,a.nups do local b=r[u]local d=b.opcode;u+=1;assert(d==70,"Unhandled opcode passed to NEWCLOSURE")local d=b.A;if d==0 then local b={value=j[b.B],index="value"}b.store=b;c[a]=b elseif d==1 then local b=b.B;local d=v[b]if d==nil then d={index=b,store=j}v[b]=d end;c[a]=d elseif d==2 then c[a]=q[b.B]end end;j[y.A]=n(b,a,c)elseif z==20 then u+=1;local a=y.A;local b=y.B;local c=x[y.aux+1]assert(type(c)=="string","NAMECALL encountered non-string constant!")j[a+1]=j[b]j[a]=j[b][c]elseif z==21 then local a,b,d=y.A,y.B,y.C;local b=b==0 and t-a or b-1;local b=c(j[a](table.unpack(j,a+1,a+b)))local c=b.n;if d==0 then t=a+c-1 else c=d-1 end;e(b,1,c,a,j)elseif z==22 then local a=y.A;local b=y.B;local c=b-1;local d;if c==o then d=t-a+1 else d=a+b-1-m.numparams end;return table.unpack(j,a,a+d-1)elseif z==23 then u+=y.D elseif z==24 then u+=y.D elseif z==25 then if j[y.A]then u+=y.D end elseif z==26 then if not j[y.A]then u+=y.D end elseif z==27 then if j[y.A]==j[y.aux]then u+=y.D else u+=1 end elseif z==28 then if j[y.A]<j[y.aux]then u+=y.D else u+=1 end elseif z==29 then if j[y.A]<=j[y.aux]then u+=y.D else u+=1 end elseif z==30 then if j[y.A]==j[y.aux]then u+=1 else u+=y.D end elseif z==31 then if j[y.A]<j[y.aux]then u+=1 else u+=y.D end elseif z==32 then if j[y.A]<=j[y.aux]then u+=1 else u+=y.D end elseif z==33 then j[y.A]=j[y.B]+j[y.C]elseif z==34 then j[y.A]=j[y.B]-j[y.C]elseif z==35 then j[y.A]=j[y.B]*j[y.C]elseif z==36 then j[y.A]=j[y.B]/j[y.C]elseif z==37 then j[y.A]=j[y.B]%j[y.C]elseif z==38 then j[y.A]=j[y.B]^j[y.C]elseif z==39 then j[y.A]=j[y.B]+x[y.C+1]elseif z==40 then j[y.A]=j[y.B]-x[y.C+1]elseif z==41 then j[y.A]=j[y.B]*x[y.C+1]elseif z==42 then j[y.A]=j[y.B]/x[y.C+1]elseif z==43 then j[y.A]=j[y.B]%x[y.C+1]elseif z==44 then j[y.A]=j[y.B]^x[y.C+1]elseif z==45 then local a=j[y.B]if not not a==false then j[y.A]=a else j[y.A]=j[y.C]or false end elseif z==46 then local a=j[y.B]if not not a==true then j[y.A]=a else j[y.A]=j[y.C]or false end elseif z==47 then local a=j[y.B]if not not a==false then j[y.A]=a else j[y.A]=x[y.C+1]or false end elseif z==48 then local a=j[y.B]if not not a==true then j[y.A]=a else j[y.A]=x[y.C+1]or false end elseif z==49 then local a=""for b=y.B,y.C do a..=j[b]end;j[y.A]=a elseif z==50 then j[y.A]=not j[y.B]elseif z==51 then j[y.A]=-j[y.B]elseif z==52 then j[y.A]=#j[y.B]elseif z==53 then u+=1;j[y.A]=d(y.aux)elseif z==54 then local a=x[y.D+1]local b={}for a,a in a do b[x[a+1]]=nil end;j[y.A]=b elseif z==55 then u+=1;local a=y.A;local b=y.B;local c=y.C-1;if c==o then c=t-b end;e(j,b,b+c,y.aux,j[a])elseif z==56 then local a=y.A;local b=j[a]if type(b)~="number"then local c=i(b)if c==nil then error("invalid 'for' limit (number expected)")end;j[a]=c;b=c end;local c=j[a+1]if type(c)~="number"then local b=i(c)if b==nil then error("invalid 'for' step (number expected)")end;j[a+1]=b;c=b end;local d=j[a+2]if type(d)~="number"then local b=i(d)if b==nil then error("invalid 'for' index (number expected)")end;j[a+2]=b;d=b end;local a=false;if c==math.abs(c)then a=d>=b else a=d<=b end;if a then u+=y.D end elseif z==57 then local a=y.A;local b=j[a]local c=j[a+1]local d=j[a+2]+c;local e=false;if c==math.abs(c)then e=d<=b else e=d>=b end;if e then j[a+2]=d;u+=y.D end elseif z==58 then local a=y.A;local b=y.aux;t=a+6;local c=j[a]if type(c)=="function"then local c={j[a](j[a+1],j[a+2])}e(c,1,b,a+3,j)if j[a+3]~=nil then j[a+2]=j[a+3]u+=y.D else u+=1 end else local c,c=h(w[y])if c==p then u+=1 else e(c,1,b,a+3,j)j[a+2]=j[a+3]u+=y.D end end elseif z==59 then if type(j[y.A])~="function"then error("FORGPREP_INEXT encountered non-function value")end;u+=y.D elseif z==61 then if type(j[y.A])~="function"then error("FORGPREP_NEXT encountered non-function value")end;u+=y.D elseif z==63 then local a=y.A;local b=y.B-1;if b==o then b=s.len;t=a+b-1 end;e(s.list,1,b,a,j)elseif z==64 then local a=l[x[y.D+1]+1]local c={}for a=1,a.nups do local b=r[u]local d=b.opcode;u+=1;assert(d==70,"Unhandled opcode passed to DUPCLOSURE")local d=b.A;if d==0 then local b={value=j[b.B],index="value"}b.store=b;c[a]=b elseif d==2 then c[a]=q[b.B]end end;j[y.A]=n(b,a,c)elseif z==65 then elseif z==66 then u+=1;local a=x[y.aux+1]assert(type(a)=="string","LOADKX encountered non-string constant!")j[y.A]=a elseif z==67 then u+=y.E elseif z==68 then elseif z==70 then error("Unhandled CAPTURE")elseif z==73 then elseif z==74 then u+=1 elseif z==75 then u+=1 elseif z==76 then local a=j[y.A]if type(a)~="function"then local b=r[u+y.D]if w[b]==nil then local function c()for a,b,c,d,e,f,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb,ub,vb,wb,xb,yb,zb,Ab,Bb,Cb,Db,Eb,Fb,Gb,Hb,Ib,Jb,Kb,Lb,Mb,Nb,Ob,Pb,Qb,Rb,Sb,Tb,Ub,Vb,Wb,Xb,Yb,Zb,ac,bc,cc,dc,ec,fc,gc,hc,ic,jc,kc,lc,mc,nc,oc,pc,qc,rc,sc,tc,uc,vc,wc,xc,yc,zc,Ac,Bc,Cc,Dc,Ec,Fc,Gc,Hc,Ic,Jc,Kc,Lc,Mc,Nc,Oc,Pc,Qc,Rc,Sc,Tc,Uc,Vc,Wc,Xc,Yc,Zc,ad,bd,cd,dd,ed,fd,gd,hd,id,jd,kd,ld,md,nd,od,pd,qd,rd,sd,td,ud,vd,wd,xd,yd,zd,Ad,Bd,Cd,Dd,Ed,Fd,Gd,Hd,Id,Jd,Kd,Ld,Md,Nd,Od,Pd,Qd,Rd,Sd in a do g({a,b,c,d,e,f,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb,ub,vb,wb,xb,yb,zb,Ab,Bb,Cb,Db,Eb,Fb,Gb,Hb,Ib,Jb,Kb,Lb,Mb,Nb,Ob,Pb,Qb,Rb,Sb,Tb,Ub,Vb,Wb,Xb,Yb,Zb,ac,bc,cc,dc,ec,fc,gc,hc,ic,jc,kc,lc,mc,nc,oc,pc,qc,rc,sc,tc,uc,vc,wc,xc,yc,zc,Ac,Bc,Cc,Dc,Ec,Fc,Gc,Hc,Ic,Jc,Kc,Lc,Mc,Nc,Oc,Pc,Qc,Rc,Sc,Tc,Uc,Vc,Wc,Xc,Yc,Zc,ad,bd,cd,dd,ed,fd,gd,hd,id,jd,kd,ld,md,nd,od,pd,qd,rd,sd,td,ud,vd,wd,xd,yd,zd,Ad,Bd,Cd,Dd,Ed,Fd,Gd,Hd,Id,Jd,Kd,Ld,Md,Nd,Od,Pd,Qd,Rd,Sd})end;g(p)end;w[b]=f(c)end end;u+=y.D elseif z==77 then if(j[y.A]==nil and 0 or 1)==bit32.rshift(y.aux,31)then u+=y.D else u+=1 end elseif z==78 then local a=y.aux;if((j[y.A]and 0 or 1)==(bit32.band(a,1)and 0 or 1))==bit32.rshift(a,31)then u+=y.D else u+=1 end elseif z==79 then local a=y.aux;local b=x[bit32.band(a,16777215)+1]assert(type(b)=="number","JUMPXEQKN encountered non-number constant!")local c=j[y.A]if bit32.rshift(a,31)==0 then u+=c==b and y.D or 1 else u+=c~=b and y.D or 1 end elseif z==80 then local a=y.aux;local b=x[bit32.band(a,16777215)+1]assert(type(b)=="string","JUMPXEQKS encountered non-string constant!")if((b==j[y.A])and 0 or 1)~=bit32.rshift(a,31)then u+=y.D else u+=1 end else error("Unsupported Opcode: "..y.opname.." op: "..z)end end end;local function b(...)local b=c(...)local d=d(m.maxstacksize)local f={len=0,list={}}e(b,1,m.numparams,0,d)if m.numparams<b.n then local a=m.numparams+1;local c=b.n-m.numparams;f.len=c;e(b,a,a+c-1,1,f.list)end;local b={}local e;if not a then e=c(j(r,b,d,m.protos,m.code,f))else e=c(true,r(b,d,m.protos,m.code,f))end;if e[1]then return table.unpack(e,2,e.n)else error(string.format("Fiu VM Error PC: %s Opcode: %s: \n%s",b.pc,b.name,e[2]),0)end end;return b end;return n(b,m)end;local rrr={luau_load=b,luau_newproto=l,luau_newmodule=k,luau_deserialize=q};return rrr.luau_load;end)();local CRYPTEDlIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local CRYPTEDlIIlIIIl="\110\56\71\68\101\106\55\55\74\106\79\78\97\81\49\47\108\70\56\90\69\100\70\87\78\120\54\115\86\87\116\115\86\48\115\88\105\85\50\90\110\109\97\121\89\117\71\112\104\57\89\110\56\109\79\71\113\88\77\87\100\108\121\69\120\103\102\112\65\48\98\116\116\82\70\106\98\101\100\83\77\107\85\101\112\114\109\78\98\99\74\75\100\117\55\122\75\110\121\101\98\83\57\56\102\81\66\47\78\112\87\97\103\79\54\82\67\103\120\99\112\67\49\106\70\71\55\82\108\77\115\80\118\111\55\97\106\83\117\117\78\100\103\97\83\112\122\100\52\120\82\90\49\66\115\82\78\66\70\121\88\101\104\102\116\103\78\119\106\107\85\115\48\104\107\51\97\77\121\55\82\99\122\122\49\109\115\105\116\97\88\53\54\80\100\109\117\50\65\118\65\85\114\121\106\52\87\103\75\109\74\119\109\75\103\121\104\99\106\50\56\75\53\88\101\103\113\51\76\110\86\108\102\85\114\56\80\90\102\102\87\49\115\43\47\121\51\85\57\115\74\97\121\87\56\49\86\89\90\75\67\99\98\43\70\81\111\109\89\103\76\66\50\103\113\83\53\52\72\119\122\119\82\78\48\89\71\101\110\47\117\82\54\72\85\68\86\121\110\90\106\111\54\98\68\55\76\80\52\109\114\73\122\107\103\105\88\108\51\99\51\98\49\49\47\103\80\109\74\87\100\89\102\105\100\111\78\68\85\74\48\48\111\97\57\103\81\53\89\87\97\66\68\55\66\50\117\72\43\51\100\51\109\47\67\112\50\47\116\82\88\79\69\76\110\120\100\121\70\48\83\86\54\76\121\54\90\78\50\73\108\88\69\100\114\87\65\81\72\114\50\122\86\113\73\119\120\122\88\53\115\99\80\107\121\76\113\121\78\98\81\56\90\65\67\48\47\66\49\50\56\50\100\115\43\55\51\82\68\73\118\84\82\55\112\115\77\116\79\79\108\90\102\82\108\53\97\86\103\107\52\101\107\76\50\110\118\43\77\76\97\54\57\107\53\87\108\109\43\105\115\68\110\72\108\100\98\107\113\113\78\113\103\68\107\109\77\114\87\72\107\106\66\84\119\73\78\78\101\83\84\89\121\67\120\109\72\85\73\98\68\80\71\102\47\54\75\108\115\66\54\106\47\65\68\107\122\50\65\51\108\82\112\74\118\122\86\109\122\100\76\107\57\120\66\121\84\104\121\85\85\89\98\90\84\120\48\120\71\100\74\52\50\103\102\78\75\98\52\70\74\113\50\89\99\115\107\74\99\116\98\83\71\99\109\81\106\69\104\103\111\84\83\51\104\89\51\121\83\76\75\100\110\69\108\89\105\76\106\112\67\75\98\87\119\68\73\87\68\73\65\73\112\51\97\100\90\113\56\118\110\49\89\117\114\65\115\108\89\48\70\72\109\66\101\98\107\75\51\55\66\118\118\55\76\56\57\54\111\74\75\122\83\56\67\101\102\48\100\114\98\55\86\48\55\83\53\72\84\78\69\122\88\69\118\105\102\55\90\74\50\50\98\68\104\71\122\70\103\67\102\89\43\88\98\89\66\90\99\85\71\105\114\54\76\86\104\98\72\52\57\75\117\67\105\70\117\71\43\87\112\110\118\89\85\114\117\77\69\114\84\66\75\66\71\77\68\102\75\109\98\110\78\111\68\121\83\43\55\84\83\97\101\115\80\70\84\67\114\106\67\67\119\108\101\119\57\49\119\108\100\108\57\115\52\55\98\86\69\65\67\109\118\50\113\101\73\52\54\122\57\68\75\108\86\106\83\105\105\75\100\110\53\86\66\79\121\77\70\120\85\108\117\80\100\116\103\51\73\85\53\110\43\89\105\82\52\50\107\77\73\70\71\85\68\51\90\117\52\86\79\53\98\88\81\111\47\117\72\120\82\112\110\104\101\118\81\82\78\85\101\73\72\97\87\102\99\70\54\90\56\110\79\74\117\120\99\75\67\105\99\47\78\119\112\48\65\49\49\97\79\77\115\47\43\106\56\105\48\83\104\109\113\76\105\67\120\113\102\69\76\111\81\55\105\101\79\70\65\83\87\52\89\72\90\77\110\53\98\57\113\84\111\111\115\43\116\78\117\57\69\81\112\110\65\112\77\105\109\108\113\101\121\111\102\70\52\49\73\87\101\87\78\65\77\107\88\103\65\56\76\57\69\51\111\111\101\79\81\71\122\74\83\89\121\100\84\50\47\107\81\67\76\103\115\52\48\74\75\66\57\55\118\79\106\110\122\119\50\102\89\72\52\55\100\97\69\87\119\119\50\75\106\53\88\108\100\101\56\121\120\110\51\121\54\115\105\65\100\121\51\74\85\65\57\65\97\116\98\112\90\56\51\68\49\78\103\98\108\51\90\101\117\75\108\47\77\76\52\122\79\66\90\78\43\114\113\105\108\55\83\113\122\79\74\55\80\85\48\66\69\79\68\68\55\106\80\51\85\47\113\110\115\100\70\76\47\88\80\78\66\73\112\74\117\103\69\67\105\97\98\97\97\72\113\55\73\54\74\47\87\79\118\80\97\56\80\51\81\121\75\73\108\83\82\79\114\74\97\85\90\98\84\122\53\98\50\73\48\85\113\111\68\97\108\99\84\70\122\104\71\118\119\112\82\76\86\85\73\114\103\112\87\49\47\113\99\52\53\108\65\90\82\55\115\87\113\113\101\98\49\47\118\73\88\55\56\53\56\120\111\115\111\116\83\81\43\90\98\43\68\77\108\104\88\86\102\119\111\120\56\69\106\105\80\68\118\83\120\117\107\77\111\89\68\122\118\116\85\119\106\98\114\83\106\108\71\50\73\115\99\106\118\53\72\97\52\87\82\103\111\75\90\73\113\113\55\51\88\65\104\75\82\120\105\54\70\100\55\115\69\57\107\110\117\65\72\119\122\75\101\53\73\68\120\77\56\72\82\100\81\104\116\55\71\108\86\106\87\65\80\76\74\48\73\115\90\119\120\52\113\77\89\115\68\57\99\116\55\67\110\111\72\90\43\71\90\82\74\55\87\55\104\85\79\113\82\114\65\43\66\119\50\53\109\104\106\71\54\76\54\108\89\74\104\72\68\69\107\98\81\119\122\69\68\88\115\104\87\102\109\67\109\122\56\109\74\98\75\114\107\67\88\76\105\119\66\77\122\115\102\110\104\87\117\82\116\50\101\82\68\89\81\98\57\83\47\110\119\101\115\72\53\109\78\109\119\100\55\67\50\51\65\114\104\81\110\116\119\85\78\81\109\76\88\56\107\76\100\85\109\102\55\97\73\76\120\70\107\102\114\115\76\99\112\68\68\104\102\85\111\84\57\56\71\53\57\108\51\89\75\79\111\75\98\99\49\49\97\102\53\88\55\50\104\51\105\67\49\49\100\48\117\102\51\110\121\48\88\47\53\120\84\67\52\82\70\87\112\87\69\114\107\82\103\119\101\43\97\83\108\103\66\98\119\72\101\102\56\97\114\75\49\109\106\119\101\84\121\83\69\55\80\105\88\87\117\66\68\82\72\120\121\112\65\111\80\112\51\112\49\121\100\88\106\80\107\74\48\118\79\115\101\120\88\78\86\47\49\57\121\116\54\107\73\51\83\75\48\115\115\90\103\67\108\110\121\118\109\86\109\43\105\103\117\57\109\84\81\99\72\74\67\76\83\115\106\110\115\76\78\57\51\104\84\122\99\86\54\53\77\116\77\56\43\119\111\79\76\73\104\99\66\72\76\76\56\51\48\100\109\75\88\86\74\116\55\118\114\56\69\121\90\75\84\43\78\80\114\77\79\82\88\80\89\79\74\55\47\79\100\119\122\88\89\77\81\47\88\75\68\43\119\119\105\85\115\104\70\89\51\78\88\89\89\86\72\119\105\71\75\114\80\116\118\105\85\106\90\90\108\54\71\47\67\122\88\52\117\80\102\110\104\122\89\99\54\52\98\120\70\104\51\79\48\87\53\122\117\55\48\50\109\109\54\57\48\89\82\81\54\100\86\83\104\72\116\82\78\112\74\54\97\119\111\69\52\106\103\55\116\108\110\112\107\55\56\73\108\53\103\70\78\116\98\82\90\119\106\70\67\122\56\80\110\97\90\67\82\109\115\55\84\72\98\106\100\50\98\81\120\97\49\98\67\102\80\114\120\89\79\69\56\74\73\78\111\107\49\54\118\121\82\84\122\47\97\120\110\70\108\105\110\109\109\78\43\72\112\83\73\120\49\121\121\55\77\74\122\89\79\57\86\49\57\80\114\67\112\43\48\69\112\113\83\67\43\82\68\70\82\66\107\84\84\72\109\117\100\86\67\56\116\119\65\54\73\87\71\102\120\110\81\54\110\75\112\118\102\117\80\104\65\110\110\49\86\111\75\67\57\49\88\74\43\103\97\106\65\106\78\82\114\107\109\78\112\67\112\67\81\101\119\70\98\98\70\71\117\86\47\117\85\74\86\67\84\104\120\89\99\76\103\66\97\65\74\101\106\90\118\56\79\88\110\70\51\86\81\104\105\106\97\70\76\110\80\109\75\54\79\115\86\118\102\115\122\48\71\103\111\54\122\54\122\110\111\109\106\51\56\77\111\49\68\108\72\48\48\86\73\111\50\100\82\52\117\121\78\114\113\83\86\81\111\75\85\101\111\83\70\77\118\117\86\97\48\53\108\87\114\81\72\111\106\75\100\104\66\98\52\99\118\97\80\119\119\49\120\89\72\70\104\66\104\104\115\109\120\110\76\101\49\110\87\99\53\121\54\122\115\111\122\85\76\75\48\115\84\117\69\51\49\84\69\55\102\73\106\103\115\116\109\57\100\118\50\100\115\82\118\50\99\122\88\82\88\47\72\84\105\109\81\82\122\104\107\50\74\85\73\49\67\51\86\87\76\110\99\111\118\110\107\89\53\83\110\118\56\117\69\52\107\97\73\69\102\70\117\83\90\107\81\77\118\103\75\67\66\102\90\107\65\101\86\99\79\88\104\78\73\108\120\99\111\102\119\52\103\70\71\108\110\72\119\69\68\117\76\106\97\56\72\109\71\66\122\47\55\101\66\67\117\74\81\104\108\48\120\90\98\121\89\53\73\84\68\56\101\97\99\107\106\110\109\49\43\83\114\109\52\76\56\47\47\106\47\97\55\55\65\119\55\47\54\84\55\80\87\81\50\78\78\43\88\103\49\97\72\100\66\113\75\86\110\112\51\86\77\57\73\66\117\53\85\48\55\67\98\83\67\105\83\87\48\114\121\57\50\98\71\67\105\86\83\88\85\104\77\87\120\48\69\85\100\87\99\81\108\71\49\80\69\122\99\100\51\90\85\113\85\51\81\69\100\72\79\65\88\121\109\97\67\97\110\48\98\70\54\57\107\74\81\43\85\68\50\119\47\56\57\118\111\106\73\67\111\112\82\100\76\90\97\112\119\115\111\57\117\120\104\101\43\53\114\72\50\73\55\111\111\116\86\111\89\82\101\67\71\53\104\103\81\86\47\108\104\106\70\57\65\88\81\89\100\86\97\85\73\75\73\43\54\90\120\65\110\54\86\75\74\109\48\53\69\90\52\49\102\97\111\69\75\105\106\122\66\112\86\107\85\101\54\50\69\114\56\97\72\97\81\49\105\77\110\72\122\78\52\84\107\89\108\72\102\77\76\75\101\113\72\48\102\112\88\100\108\120\97\73\76\115\43\103\90\56\53\66\75\111\116\118\113\99\77\118\101\68\89\90\82\83\120\121\102\114\66\53\115\117\117\101\89\71\52\88\76\74\79\77\105\111\101\120\100\101\50\77\67\88\116\122\79\97\97\112\52\77\56\107\73\70\120\81\68\75\104\107\85\65\56\105\106\82\82\98\67\105\118\98\43\76\79\48\51\99\76\47\56\122\83\122\56\81\109\80\111\80\43\80\112\43\71\70\97\109\116\88\121\100\87\56\82\99\112\101\77\100\74\117\74\57\76\107\117\111\118\65\75\113\118\104\109\106\77\75\101\65\113\119\71\70\103\108\43\72\116\73\76\50\52\121\48\65\81\109\43\97\49\82\72\111\85\75\84\55\71\107\57\87\70\54\66\81\73\115\121\72\51\110\47\71\82\87\119\103\121\114\75\84\84\89\112\49\50\78\72\56\74\67\57\48\102\57\50\68\97\107\66\53\86\88\102\109\56\97\99\120\47\89\108\97\119\116\83\77\106\97\89\117\97\117\98\85\98\74\105\55\76\97\65\43\101\121\49\76\75\80\98\104\47\82\82\51\70\81\122\102\103\80\83\106\68\97\100\67\51\77\98\51\75\50\76\107\121\53\82\49\97\106\120\43\49\57\76\69\55\77\81\108\110\101\115\122\70\83\99\50\73\47\51\103\76\107\76\110\43\114\108\111\77\86\107\86\72\50\83\119\102\110\100\67\67\82\81\106\75\108\83\54\84\49\111\86\109\70\98\82\120\84\100\97\53\102\99\122\102\97\83\49\75\47\79\49\78\115\48\86\109\70\55\102\48\98\88\115\99\79\48\105\98\80\113\102\116\65\113\57\73\81\114\101\105\103\56\112\99\120\52\109\74\77\103\114\72\121\114\52\107\117\104\53\108\51\72\110\79\81\43\70\76\48\88\88\100\81\50\119\102\85\79\87\72\51\120\71\73\47\70\79\118\67\120\86\109\67\49\43\66\79\75\57\104\52\73\52\121\68\102\102\49\107\83\83\122\57\68\82\114\98\47\74\47\65\61\61";local CRYPTEDlIIllIII='cGdGMyktdmIsIzp7eE5xViI=';local CRYPTEDlIIllIIl='lol you have to stop trying to deobfuscate';local CRYPTEDlIIlIIlI=function(a,b)local c=CRYPTEDlIIlIlIl(CRYPTEDlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,CRYPTEDlIIlIllI(b))return CRYPTEDlIIlIllI(d)end;local CRYPTEDlIIllIIl='lol you have to stop trying to deobfuscate';local CRYPTEDlIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local CRYPTEDlIIllIlI='QHZiQkloTlA+cEtBQWl3MDMzUA==';local CRYPTEDlIIlIIII='Oz8/NGtZYjtDaUkrRkErWloyOyNzUyVycTolSjNqJDQwaE4=bi12PyZmUDh0RiF1';function CRYPTEDlIIlIlll(a,b)local c=CRYPTEDlIIlIllI(a,b);local d=CRYPTEDlIIllIlI;return c,d end;return CRYPTEDlIIlIlII(CRYPTEDlIIlIIlI(CRYPTEDlIIllIll,CRYPTEDlIIlIIIl),fev(0))()end)()
